Traceback (most recent call last):
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\jupyter_core\utils\__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\USER\miniconda3\envs\ml_tf\lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
msft = yf.Ticker("AAPL")
msft.info
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mgaierror[0m                                  Traceback (most recent call last)
File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connection.py:174[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    173[0m [38;5;28;01mtry[39;00m:
[1;32m--> 174[0m     conn [38;5;241m=[39m connection[38;5;241m.[39mcreate_connection(
[0;32m    175[0m         ([38;5;28mself[39m[38;5;241m.[39m_dns_host, [38;5;28mself[39m[38;5;241m.[39mport), [38;5;28mself[39m[38;5;241m.[39mtimeout, [38;5;241m*[39m[38;5;241m*[39mextra_kw
[0;32m    176[0m     )
[0;32m    178[0m [38;5;28;01mexcept[39;00m SocketTimeout:

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\util\connection.py:72[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, socket_options)[0m
[0;32m     68[0m     [38;5;28;01mreturn[39;00m six[38;5;241m.[39mraise_from(
[0;32m     69[0m         LocationParseError([38;5;124mu[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m, label empty or too long[39m[38;5;124m"[39m [38;5;241m%[39m host), [38;5;28;01mNone[39;00m
[0;32m     70[0m     )
[1;32m---> 72[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m socket[38;5;241m.[39mgetaddrinfo(host, port, family, socket[38;5;241m.[39mSOCK_STREAM):
[0;32m     73[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [1;32m~\miniconda3\envs\tensorflow\Lib\socket.py:962[0m, in [0;36mgetaddrinfo[1;34m(host, port, family, type, proto, flags)[0m
[0;32m    961[0m addrlist [38;5;241m=[39m []
[1;32m--> 962[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m _socket[38;5;241m.[39mgetaddrinfo(host, port, family, [38;5;28mtype[39m, proto, flags):
[0;32m    963[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[1;31mgaierror[0m: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mNewConnectionError[0m                        Traceback (most recent call last)
File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connectionpool.py:715[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    714[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[1;32m--> 715[0m httplib_response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_make_request(
[0;32m    716[0m     conn,
[0;32m    717[0m     method,
[0;32m    718[0m     url,
[0;32m    719[0m     timeout[38;5;241m=[39mtimeout_obj,
[0;32m    720[0m     body[38;5;241m=[39mbody,
[0;32m    721[0m     headers[38;5;241m=[39mheaders,
[0;32m    722[0m     chunked[38;5;241m=[39mchunked,
[0;32m    723[0m )
[0;32m    725[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[0;32m    726[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[0;32m    727[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[0;32m    728[0m [38;5;66;03m# mess.[39;00m

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connectionpool.py:404[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[0;32m    403[0m [38;5;28;01mtry[39;00m:
[1;32m--> 404[0m     [38;5;28mself[39m[38;5;241m.[39m_validate_conn(conn)
[0;32m    405[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:
[0;32m    406[0m     [38;5;66;03m# Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.[39;00m

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connectionpool.py:1058[0m, in [0;36mHTTPSConnectionPool._validate_conn[1;34m(self, conn)[0m
[0;32m   1057[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mgetattr[39m(conn, [38;5;124m"[39m[38;5;124msock[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m):  [38;5;66;03m# AppEngine might not have  `.sock`[39;00m
[1;32m-> 1058[0m     conn[38;5;241m.[39mconnect()
[0;32m   1060[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m conn[38;5;241m.[39mis_verified:

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connection.py:363[0m, in [0;36mHTTPSConnection.connect[1;34m(self)[0m
[0;32m    361[0m [38;5;28;01mdef[39;00m [38;5;21mconnect[39m([38;5;28mself[39m):
[0;32m    362[0m     [38;5;66;03m# Add certificate verification[39;00m
[1;32m--> 363[0m     [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m conn [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_new_conn()
[0;32m    364[0m     hostname [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhost

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connection.py:186[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    185[0m [38;5;28;01mexcept[39;00m SocketError [38;5;28;01mas[39;00m e:
[1;32m--> 186[0m     [38;5;28;01mraise[39;00m NewConnectionError(
[0;32m    187[0m         [38;5;28mself[39m, [38;5;124m"[39m[38;5;124mFailed to establish a new connection: [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m e
[0;32m    188[0m     )
[0;32m    190[0m [38;5;28;01mreturn[39;00m conn

[1;31mNewConnectionError[0m: <urllib3.connection.HTTPSConnection object at 0x000002203A3E6410>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mMaxRetryError[0m                             Traceback (most recent call last)
File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\requests\adapters.py:486[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    485[0m [38;5;28;01mtry[39;00m:
[1;32m--> 486[0m     resp [38;5;241m=[39m conn[38;5;241m.[39murlopen(
[0;32m    487[0m         method[38;5;241m=[39mrequest[38;5;241m.[39mmethod,
[0;32m    488[0m         url[38;5;241m=[39murl,
[0;32m    489[0m         body[38;5;241m=[39mrequest[38;5;241m.[39mbody,
[0;32m    490[0m         headers[38;5;241m=[39mrequest[38;5;241m.[39mheaders,
[0;32m    491[0m         redirect[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    492[0m         assert_same_host[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    493[0m         preload_content[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    494[0m         decode_content[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    495[0m         retries[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mmax_retries,
[0;32m    496[0m         timeout[38;5;241m=[39mtimeout,
[0;32m    497[0m         chunked[38;5;241m=[39mchunked,
[0;32m    498[0m     )
[0;32m    500[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\connectionpool.py:799[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    797[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[1;32m--> 799[0m retries [38;5;241m=[39m retries[38;5;241m.[39mincrement(
[0;32m    800[0m     method, url, error[38;5;241m=[39me, _pool[38;5;241m=[39m[38;5;28mself[39m, _stacktrace[38;5;241m=[39msys[38;5;241m.[39mexc_info()[[38;5;241m2[39m]
[0;32m    801[0m )
[0;32m    802[0m retries[38;5;241m.[39msleep()

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\urllib3\util\retry.py:592[0m, in [0;36mRetry.increment[1;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[0;32m    591[0m [38;5;28;01mif[39;00m new_retry[38;5;241m.[39mis_exhausted():
[1;32m--> 592[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, error [38;5;129;01mor[39;00m ResponseError(cause))
[0;32m    594[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[1;31mMaxRetryError[0m: HTTPSConnectionPool(host='query1.finance.yahoo.com', port=443): Max retries exceeded with url: /v1/test/getcrumb (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x000002203A3E6410>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))

During handling of the above exception, another exception occurred:

[1;31mConnectionError[0m                           Traceback (most recent call last)
Cell [1;32mIn[71], line 2[0m
[0;32m      1[0m msft [38;5;241m=[39m yf[38;5;241m.[39mTicker([38;5;124m"[39m[38;5;124mAAPL[39m[38;5;124m"[39m)
[1;32m----> 2[0m msft[38;5;241m.[39minfo

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\ticker.py:155[0m, in [0;36mTicker.info[1;34m(self)[0m
[0;32m    153[0m [38;5;129m@property[39m
[0;32m    154[0m [38;5;28;01mdef[39;00m [38;5;21minfo[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mdict[39m:
[1;32m--> 155[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mget_info()

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\base.py:222[0m, in [0;36mTickerBase.get_info[1;34m(self, proxy)[0m
[0;32m    220[0m [38;5;28;01mdef[39;00m [38;5;21mget_info[39m([38;5;28mself[39m, proxy[38;5;241m=[39m[38;5;28;01mNone[39;00m) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mdict[39m:
[0;32m    221[0m     [38;5;28mself[39m[38;5;241m.[39m_quote[38;5;241m.[39mproxy [38;5;241m=[39m proxy [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39mproxy
[1;32m--> 222[0m     data [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_quote[38;5;241m.[39minfo
[0;32m    223[0m     [38;5;28;01mreturn[39;00m data

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\scrapers\quote.py:560[0m, in [0;36mQuote.info[1;34m(self)[0m
[0;32m    557[0m [38;5;129m@property[39m
[0;32m    558[0m [38;5;28;01mdef[39;00m [38;5;21minfo[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mdict[39m:
[0;32m    559[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_info [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m--> 560[0m         [38;5;28mself[39m[38;5;241m.[39m_fetch_info([38;5;28mself[39m[38;5;241m.[39mproxy)
[0;32m    561[0m         [38;5;28mself[39m[38;5;241m.[39m_fetch_complementary([38;5;28mself[39m[38;5;241m.[39mproxy)
[0;32m    563[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_info

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\scrapers\quote.py:635[0m, in [0;36mQuote._fetch_info[1;34m(self, proxy)[0m
[0;32m    633[0m [38;5;28mself[39m[38;5;241m.[39m_already_fetched [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m    634[0m modules [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mfinancialData[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mquoteType[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mdefaultKeyStatistics[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124massetProfile[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124msummaryDetail[39m[38;5;124m'[39m]
[1;32m--> 635[0m result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_fetch(proxy, modules[38;5;241m=[39mmodules)
[0;32m    636[0m [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    637[0m     [38;5;28mself[39m[38;5;241m.[39m_info [38;5;241m=[39m {}

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\scrapers\quote.py:624[0m, in [0;36mQuote._fetch[1;34m(self, proxy, modules)[0m
[0;32m    622[0m params_dict [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mmodules[39m[38;5;124m"[39m: modules, [38;5;124m"[39m[38;5;124mcorsDomain[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mfinance.yahoo.com[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mformatted[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mfalse[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msymbol[39m[38;5;124m"[39m: [38;5;28mself[39m[38;5;241m.[39m_symbol}
[0;32m    623[0m [38;5;28;01mtry[39;00m:
[1;32m--> 624[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_data[38;5;241m.[39mget_raw_json(_QUOTE_SUMMARY_URL_ [38;5;241m+[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124m/[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m_symbol[38;5;132;01m}[39;00m[38;5;124m"[39m, user_agent_headers[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_data[38;5;241m.[39muser_agent_headers, params[38;5;241m=[39mparams_dict, proxy[38;5;241m=[39mproxy)
[0;32m    625[0m [38;5;28;01mexcept[39;00m requests[38;5;241m.[39mexceptions[38;5;241m.[39mHTTPError [38;5;28;01mas[39;00m e:
[0;32m    626[0m     utils[38;5;241m.[39mget_yf_logger()[38;5;241m.[39merror([38;5;28mstr[39m(e))

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\data.py:399[0m, in [0;36mYfData.get_raw_json[1;34m(self, url, user_agent_headers, params, proxy, timeout)[0m
[0;32m    397[0m [38;5;28;01mdef[39;00m [38;5;21mget_raw_json[39m([38;5;28mself[39m, url, user_agent_headers[38;5;241m=[39m[38;5;28;01mNone[39;00m, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, proxy[38;5;241m=[39m[38;5;28;01mNone[39;00m, timeout[38;5;241m=[39m[38;5;241m30[39m):
[0;32m    398[0m     utils[38;5;241m.[39mget_yf_logger()[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mget_raw_json(): [39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[38;5;124m'[39m)
[1;32m--> 399[0m     response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget(url, user_agent_headers[38;5;241m=[39muser_agent_headers, params[38;5;241m=[39mparams, proxy[38;5;241m=[39mproxy, timeout[38;5;241m=[39mtimeout)
[0;32m    400[0m     response[38;5;241m.[39mraise_for_status()
[0;32m    401[0m     [38;5;28;01mreturn[39;00m response[38;5;241m.[39mjson()

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\utils.py:103[0m, in [0;36mlog_indent_decorator.<locals>.wrapper[1;34m(*args, **kwargs)[0m
[0;32m    100[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mEntering [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    102[0m [38;5;28;01mwith[39;00m IndentationContext():
[1;32m--> 103[0m     result [38;5;241m=[39m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    105[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mExiting [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    106[0m [38;5;28;01mreturn[39;00m result

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\data.py:348[0m, in [0;36mYfData.get[1;34m(self, url, user_agent_headers, params, proxy, timeout)[0m
[0;32m    345[0m [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124mcrumb[39m[38;5;124m'[39m [38;5;129;01min[39;00m params:
[0;32m    346[0m     [38;5;28;01mraise[39;00m [38;5;167;01mException[39;00m([38;5;124m"[39m[38;5;124mDon[39m[38;5;124m'[39m[38;5;124mt manually add [39m[38;5;124m'[39m[38;5;124mcrumb[39m[38;5;124m'[39m[38;5;124m to params dict, let data.py handle it[39m[38;5;124m"[39m)
[1;32m--> 348[0m cookie, crumb, strategy [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cookie_and_crumb()
[0;32m    349[0m [38;5;28;01mif[39;00m crumb [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    350[0m     crumbs [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mcrumb[39m[38;5;124m'[39m: crumb}

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\utils.py:103[0m, in [0;36mlog_indent_decorator.<locals>.wrapper[1;34m(*args, **kwargs)[0m
[0;32m    100[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mEntering [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    102[0m [38;5;28;01mwith[39;00m IndentationContext():
[1;32m--> 103[0m     result [38;5;241m=[39m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    105[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mExiting [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    106[0m [38;5;28;01mreturn[39;00m result

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\data.py:324[0m, in [0;36mYfData._get_cookie_and_crumb[1;34m(self, proxy, timeout)[0m
[0;32m    321[0m         cookie, crumb [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cookie_and_crumb_basic(proxy, timeout)
[0;32m    322[0m [38;5;28;01melse[39;00m:
[0;32m    323[0m     [38;5;66;03m# Fallback strategy[39;00m
[1;32m--> 324[0m     cookie, crumb [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cookie_and_crumb_basic(proxy, timeout)
[0;32m    325[0m     [38;5;28;01mif[39;00m cookie [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m crumb [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    326[0m         [38;5;66;03m# Fail[39;00m
[0;32m    327[0m         [38;5;28mself[39m[38;5;241m.[39m_set_cookie_strategy([38;5;124m'[39m[38;5;124mcsrf[39m[38;5;124m'[39m, have_lock[38;5;241m=[39m[38;5;28;01mTrue[39;00m)

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\utils.py:103[0m, in [0;36mlog_indent_decorator.<locals>.wrapper[1;34m(*args, **kwargs)[0m
[0;32m    100[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mEntering [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    102[0m [38;5;28;01mwith[39;00m IndentationContext():
[1;32m--> 103[0m     result [38;5;241m=[39m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    105[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mExiting [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[0;32m    106[0m [38;5;28;01mreturn[39;00m result

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\data.py:214[0m, in [0;36mYfData._get_cookie_and_crumb_basic[1;34m(self, proxy, timeout)[0m
[0;32m    211[0m [38;5;129m@utils[39m[38;5;241m.[39mlog_indent_decorator
[0;32m    212[0m [38;5;28;01mdef[39;00m [38;5;21m_get_cookie_and_crumb_basic[39m([38;5;28mself[39m, proxy, timeout):
[0;32m    213[0m     cookie [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cookie_basic(proxy, timeout)
[1;32m--> 214[0m     crumb [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_crumb_basic(proxy, timeout)
[0;32m    215[0m     [38;5;28;01mreturn[39;00m cookie, crumb

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\yfinance\data.py:202[0m, in [0;36mYfData._get_crumb_basic[1;34m(self, proxy, timeout)[0m
[0;32m    200[0m     crumb_response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_session[38;5;241m.[39mget([38;5;241m*[39m[38;5;241m*[39mget_args)
[0;32m    201[0m [38;5;28;01melse[39;00m:
[1;32m--> 202[0m     crumb_response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_session[38;5;241m.[39mget([38;5;241m*[39m[38;5;241m*[39mget_args)
[0;32m    203[0m [38;5;28mself[39m[38;5;241m.[39m_crumb [38;5;241m=[39m crumb_response[38;5;241m.[39mtext
[0;32m    204[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_crumb [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m [38;5;124m'[39m[38;5;124m<html>[39m[38;5;124m'[39m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_crumb:

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\requests\sessions.py:602[0m, in [0;36mSession.get[1;34m(self, url, **kwargs)[0m
[0;32m    594[0m [38;5;250m[39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request. Returns :class:`Response` object.[39;00m
[0;32m    595[0m 
[0;32m    596[0m [38;5;124;03m:param url: URL for the new :class:`Request` object.[39;00m
[0;32m    597[0m [38;5;124;03m:param \*\*kwargs: Optional arguments that ``request`` takes.[39;00m
[0;32m    598[0m [38;5;124;03m:rtype: requests.Response[39;00m
[0;32m    599[0m [38;5;124;03m"""[39;00m
[0;32m    601[0m kwargs[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m)
[1;32m--> 602[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mrequest([38;5;124m"[39m[38;5;124mGET[39m[38;5;124m"[39m, url, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\requests\sessions.py:589[0m, in [0;36mSession.request[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[0;32m    584[0m send_kwargs [38;5;241m=[39m {
[0;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[0;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[0;32m    587[0m }
[0;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[1;32m--> 589[0m resp [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msend(prep, [38;5;241m*[39m[38;5;241m*[39msend_kwargs)
[0;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\requests\sessions.py:703[0m, in [0;36mSession.send[1;34m(self, request, **kwargs)[0m
[0;32m    700[0m start [38;5;241m=[39m preferred_clock()
[0;32m    702[0m [38;5;66;03m# Send the request[39;00m
[1;32m--> 703[0m r [38;5;241m=[39m adapter[38;5;241m.[39msend(request, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[0;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [1;32m~\miniconda3\envs\tensorflow\Lib\site-packages\requests\adapters.py:519[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    515[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[0;32m    516[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[0;32m    517[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[1;32m--> 519[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[0;32m    521[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[0;32m    522[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)

[1;31mConnectionError[0m: HTTPSConnectionPool(host='query1.finance.yahoo.com', port=443): Max retries exceeded with url: /v1/test/getcrumb (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x000002203A3E6410>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))

